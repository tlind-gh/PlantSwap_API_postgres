package com.backendContextAssignment1.plantSwap_postgres.models;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;

import java.time.LocalDate;

@Entity @Table(name = "users")
public class User {
    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    @Column(name = "username", unique = true, length = 50, nullable = false)
    @NotNull(message = "username cannot be null")
    @Size(min = 1, max = 50, message = "username must be 1 to 50 characters long")
    private String username;

    @Column(name = "password", length = 50, nullable = false)
    @NotNull(message = "password cannot be null")
    @Size(min = 1, max = 50, message = "password must between 8 and 50 characters long")
    //also needs to be HASHED and SALTED!!
    private String password;

    @Column(name = "email", unique = true, length = 200, nullable = false)
    @NotNull(message = "email cannot be null")
    @Size(min = 1, max = 200, message = "email must be between 1 and 50 characters long")
    //email must have a series of numbers/letter/underscore/hyphons + an @ + another series of numbers/letter/underscore/hyphons
    @Pattern(regexp = "^[\\w.-]+@[\\w.-]+$", message = "email address does not have a valid format")
    private String email;

    @Column(name = "created_at", nullable = false, updatable = false)
    @NotNull(message = "created_at cannot be null")
    private LocalDate createdAt;

    @Column(name = "updated_at")
    private LocalDate updatedAt;

    public User() {
        /*
        createdAt = LocalDate.now();
        updatedAt = null;

         */
    }

    //autogenerated getters and setters (w. validation annotations)
    //no setter for id and createdAt, since these should never be modified

}

